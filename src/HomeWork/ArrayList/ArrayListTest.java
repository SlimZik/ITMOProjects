package HomeWork.ArrayList;

/* Task 3.
Сделать реализацию нашего интерфейса List, но только на основании массива - ArrayList.
Этот класс должен реализовывать следующие методы: add(), get(), remove() и iterator() из интерфейса List.
Если при выполнении add() в массиве нет свободных элементов, то создать новый - вдвое больше, скопировать в него все значения из старого и + 1,
который сейчас добавляется. Удаление должно не просто установить null в ячейку массива, но и сдвинуть все элементы влево.
Например, если список с такими элементами:

|0|1|2|3|4|5|
Удаляем элемент по индексу 2:
|0|1|_|3|4|5|
Перемещаем все элементы влево:
|0|1|3|4|5|_|

Теперь при итерации по ним после 1 будет идти сразу 3, как в связном списке.
Если задание сделано правильно, то поведение двух списков для пользователя не будет различаться. Т.е. он может сделать:
List list1 = new LinkedList();
List list2 = new ArrayList();

И если будет выполнять одинаковые операции над обоими списками, то и результат будет таким же.
 */

public class ArrayListTest {
    public static void main(String[] args) {

        ArrayList arr = new ArrayList();
        int s = 0;
        for (int i = 0; i < 12; i++) {
            arr.add(s + i);
        }

        arr.add(12);
        arr.add(13);
        arr.add(14);

        arr.get(5);

        arr.remove(1);
        arr.remove(5);

        for (Object o : arr) {
            System.out.println(o);
        }

        System.out.println();

        for (Object val : arr) {             //forEach
            System.out.println(val);
        }
    }
}